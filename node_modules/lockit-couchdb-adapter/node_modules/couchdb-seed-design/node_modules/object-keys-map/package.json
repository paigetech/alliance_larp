{
  "name": "object-keys-map",
  "version": "1.0.2",
  "description": "`Array.prototype.map` for object keys",
  "keywords": [
    "object",
    "map",
    "keys"
  ],
  "author": {
    "name": "Maciej MaÅ‚ecki",
    "email": "me@mmalecki.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/mmalecki/object-keys-map.git"
  },
  "scripts": {
    "test": "node test/simple-test.js"
  },
  "license": "MIT",
  "readme": "# object-keys-map\n[![Build Status](https://travis-ci.org/mmalecki/object-keys-map.png?branch=master)](https://travis-ci.org/mmalecki/object-keys-map)\n\n`Array.prototype.map` for object keys.\n\n## Usage\n\n```js\nvar assert = require('assert');\nvar objmap = require('object-keys-map');\n\nvar o1 = {\n  foo: 'bar',\n  bar: 'foo'\n};\n\nobjmap(o1, function (key) {\n  return 'foo/' + key;\n}); // => `{ 'foo/foo': 'bar', 'foo/bar': 'foo' }`\n```\n\n## API\n\n### `objectKeysMap(obj, iterator, this)`\n\n* `obj` (`object`) - object to map on\n* `iterator` (`function`, required) - iterator function\n* `this` (optional) - `this` for `iterator`\n\nIterates over keys of `obj` and creates a new object with keys based on return\nvalue of `iterator` and values from `obj`.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mmalecki/object-keys-map/issues"
  },
  "_id": "object-keys-map@1.0.2",
  "dist": {
    "shasum": "95dedf608fef8a0e515a53469f19c96831c0fabb",
    "tarball": "http://registry.npmjs.org/object-keys-map/-/object-keys-map-1.0.2.tgz"
  },
  "_from": "object-keys-map@>=1.0.1-0 <1.1.0-0",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "mmalecki",
    "email": "me@mmalecki.com"
  },
  "maintainers": [
    {
      "name": "mmalecki",
      "email": "me@mmalecki.com"
    }
  ],
  "directories": {},
  "_shasum": "95dedf608fef8a0e515a53469f19c96831c0fabb",
  "_resolved": "https://registry.npmjs.org/object-keys-map/-/object-keys-map-1.0.2.tgz"
}
